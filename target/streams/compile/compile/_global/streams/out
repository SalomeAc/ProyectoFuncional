[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Comete\package.scala:41:28: (Double, Double) does not take parameters[0m
[0m[[0m[31merror[0m] [0m[0m        } yield (math.pow(i(0), alpha) * math.pow(math.abs(i(1) - p), beta))).sum[0m
[0m[[0m[31merror[0m] [0m[0m                           ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Comete\package.scala:41:61: (Double, Double) does not take parameters[0m
[0m[[0m[31merror[0m] [0m[0m        } yield (math.pow(i(0), alpha) * math.pow(math.abs(i(1) - p), beta))).sum[0m
[0m[[0m[31merror[0m] [0m[0m                                                            ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Comete\package.scala:41:79: ambiguous implicit values:[0m
[0m[[0m[31merror[0m] [0m[0m both object BigIntIsIntegral in object Numeric of type scala.math.Numeric.BigIntIsIntegral.type[0m
[0m[[0m[31merror[0m] [0m[0m and object IntIsIntegral in object Numeric of type scala.math.Numeric.IntIsIntegral.type[0m
[0m[[0m[31merror[0m] [0m[0m match expected type scala.math.Numeric[B][0m
[0m[[0m[31merror[0m] [0m[0m        } yield (math.pow(i(0), alpha) * math.pow(math.abs(i(1) - p), beta))).sum[0m
[0m[[0m[31merror[0m] [0m[0m                                                                              ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Comete\package.scala:36:44: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : (main.scala.Comete.package.Frequency, main.scala.Comete.package.DistributionValues) => Double[0m
[0m[[0m[31merror[0m] [0m[0m    (which expands to)  (scala.collection.immutable.Vector[Double], scala.collection.immutable.Vector[Double]) => Double[0m
[0m[[0m[31merror[0m] [0m[0m required: main.scala.Comete.package.MedidaPol[0m
[0m[[0m[31merror[0m] [0m[0m    (which expands to)  ((scala.collection.immutable.Vector[Double], scala.collection.immutable.Vector[Double])) => Double[0m
[0m[[0m[31merror[0m] [0m[0m    (pi: Frequency, y: DistributionValues) =>[0m
[0m[[0m[31merror[0m] [0m[0m                                           ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Opinion\package.scala:59:17: main.scala.Opinion.package.SpecificWeightedGraph does not take parameters[0m
[0m[[0m[31merror[0m] [0m[0m          if swg(0)(j, i) > 0[0m
[0m[[0m[31merror[0m] [0m[0m                ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Opinion\package.scala:66:16: value map is not a member of Nothing[0m
[0m[[0m[31merror[0m] [0m[0m        j <- Ai(i)[0m
[0m[[0m[31merror[0m] [0m[0m               ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Opinion\package.scala:67:45: main.scala.Opinion.package.SpecificWeightedGraph does not take parameters[0m
[0m[[0m[31merror[0m] [0m[0m      }yield ((1-math.abs(sb(j)-sb(i)))*(swg(0)(j,i))*(sb(j)-sb(i)))/Ai(i).length).sum).toVector[0m
[0m[[0m[31merror[0m] [0m[0m                                            ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\salom\Desktop\ProyectoFuncional\src\main\scala\Opinion\package.scala:67:76: value length is not a member of Nothing[0m
[0m[[0m[31merror[0m] [0m[0m      }yield ((1-math.abs(sb(j)-sb(i)))*(swg(0)(j,i))*(sb(j)-sb(i)))/Ai(i).length).sum).toVector[0m
[0m[[0m[31merror[0m] [0m[0m                                                                           ^[0m
[0m[[0m[31merror[0m] [0m[0m8 errors found[0m
